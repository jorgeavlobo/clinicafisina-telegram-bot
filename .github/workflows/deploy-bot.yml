# .github/workflows/deploy-bot.yml
name: CI¬†‚Üí¬†Lint¬†‚Üí¬†Build¬†‚Üí¬†Deploy¬†‚Ä¢¬†Cl√≠nica¬†Fisina¬†Telegram¬†Bot

on:
  push:
    branches: [main]
  workflow_dispatch: {}

# prevent concurrent deploys racing each other
concurrency:
  group: deploy-bot
  cancel-in-progress: true

###############################################################################
# 1Ô∏è‚É£  Lint with Ruff
###############################################################################
jobs:
  lint:
    name: üìù Ruff lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Ruff
        uses: chartboost/ruff-action@v1
        with:
          # run 'ruff check' on the repository root, output
          args: "check --format=github ."

###############################################################################
# 2Ô∏è‚É£  Build & Push Docker Image
###############################################################################
  build-and-deploy:
    name: üöÄ Build & Deploy
    needs: lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU (for cross‚Äëarch support)
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build & push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/jorgeavlobo/clinicafisina-telegram-bot:latest
            ghcr.io/jorgeavlobo/clinicafisina-telegram-bot:${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/jorgeavlobo/clinicafisina-telegram-bot:cache
          cache-to: type=registry,ref=ghcr.io/jorgeavlobo/clinicafisina-telegram-bot:cache,mode=max

      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@master
        with:
          host:       ${{ secrets.OVH_VPS_HOST }}
          username:   ${{ secrets.OVH_VPS_USERNAME }}
          key:        ${{ secrets.OVH_VPS_SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.OVH_VPS_SSH_PASSPHRASE }}
          port:       42922
          script: |
            set -Eeuo pipefail
            PROJECT_DIR=/opt/clinicafisina_telegram_bot
            REPO=git@github.com:jorgeavlobo/clinicafisina-telegram-bot.git

            echo "‚ñ∂ Ensure project dir"
            sudo mkdir -p "$PROJECT_DIR"
            sudo chown "$USER":"$USER" "$PROJECT_DIR"
            cd "$PROJECT_DIR"

            echo "‚ñ∂ Syncing repo"
            if [ ! -d .git ]; then
              git clone --depth=1 "$REPO" .
            else
              git fetch --all
              git reset --hard origin/main
              git clean -fd
            fi

            echo "‚ñ∂ Pull & restart containers"
            echo "${{ secrets.GHCR_PAT }}" | \
              docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin
            docker compose pull
            docker compose up -d

            echo "‚ñ∂ üü¢ Deployment complete"
            docker compose ps
