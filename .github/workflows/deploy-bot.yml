# .github/workflows/deploy-bot.yml
name: Build & Deploy ➜ Clinica Fisina Bot
on:
  push:
    branches: [main]

jobs:
# ────────────────────────────────────────────────────────────────────────
# 1.  Lint (ruff + black --check)  — fast, runs in ~15 s
# ────────────────────────────────────────────────────────────────────────
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Ruff
        uses: chartboost/ruff-action@v1
        with:
          args: "--output-format=github"
      - name: Black – check only
        uses: psf/black@stable
        with:
          options: "--check --verbose"
    outputs:
      cache-key: ${{ steps.rust-cache.outputs.cache-key }} # dummy – see Job #2 note

# ────────────────────────────────────────────────────────────────────────
# 2.  Build & push image  (only if   needs: lint   succeeded)
# ────────────────────────────────────────────────────────────────────────
  build:
    needs: lint
    runs-on: ubuntu-latest
    permissions:
      packages: write      # needed for GHCR push with GITHUB_TOKEN
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU (cross‑build)
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build & push (GHCR)
        uses: docker/build-push-action@v5
        with:
          context: .
          push:   true
          tags: |
            ghcr.io/jorgeavlobo/clinicafisina-telegram-bot:latest
            ghcr.io/jorgeavlobo/clinicafisina-telegram-bot:${{ github.sha }}
          cache-from: type=gha
          cache-to:   type=gha,mode=max

# ────────────────────────────────────────────────────────────────────────
# 3.  SSH deploy  (runs only if image build succeeded)
# ────────────────────────────────────────────────────────────────────────
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host:       ${{ secrets.OVH_VPS_HOST }}
          username:   ${{ secrets.OVH_VPS_USERNAME }}
          key:        ${{ secrets.OVH_VPS_SSH_PRIVATE_KEY }}
          port:       42922
          script: |
            set -Eeuo pipefail
            trap 'rm -f ~/.ssh/github_actions_key || true' EXIT

            PROJECT_DIR=/opt/clinicafisina_telegram_bot
            IMAGE=ghcr.io/jorgeavlobo/clinicafisina-telegram-bot:latest

            echo "► ensuring project dir exists"
            sudo mkdir -p "$PROJECT_DIR"
            sudo chown $USER:$USER "$PROJECT_DIR"
            cd "$PROJECT_DIR"

            echo "► pulling latest docker‑compose file"
            if [ ! -d .git ]; then
              git clone --depth=1 git@github.com:jorgeavlobo/clinicafisina-telegram-bot.git .
            else
              git fetch --all
              git reset --hard origin/main
              git clean -fd
            fi

            echo "► docker login GHCR with short‑lived token"
            echo "${{ github.token }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            echo "► pulling updated image layers"
            docker compose pull

            echo "► recreating container"
            docker compose up -d

            echo "► done."
