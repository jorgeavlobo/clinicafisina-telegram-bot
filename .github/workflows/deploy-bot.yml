# .github/workflows/deploy-bot.yml
name: Lint, Build & Deploy Clínica Fisina Bot

on:
  push:
    branches:
      - main

jobs:
  # -------------------------------------------------------------------------
  # 1) Linting
  # -------------------------------------------------------------------------
  lint:
    name: Lint Python code with Ruff
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Ruff
        uses: chartboost/ruff-action@v1
        with:
          # If you later want GitHub‑style annotations, pin `version:` to a Ruff
          # release >=0.0.285 and add `--format=github` here.
          args: check .

  # -------------------------------------------------------------------------
  # 2) Build & Push Docker image
  # -------------------------------------------------------------------------
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build & push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/jorgeavlobo/clinicafisina-telegram-bot:latest
            ghcr.io/jorgeavlobo/clinicafisina-telegram-bot:${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/jorgeavlobo/clinicafisina-telegram-bot:cache
          cache-to:   type=registry,ref=ghcr.io/jorgeavlobo/clinicafisina-telegram-bot:cache,mode=max

  # -------------------------------------------------------------------------
  # 3) Deploy via SSH
  # -------------------------------------------------------------------------
  deploy:
    name: Deploy to OVH VPS
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy Bot via SSH
        uses: appleboy/ssh-action@master
        with:
          host:      ${{ secrets.OVH_VPS_HOST }}
          username:  ${{ secrets.OVH_VPS_USERNAME }}
          key:       ${{ secrets.OVH_VPS_SSH_PRIVATE_KEY }}
          passphrase:${{ secrets.OVH_VPS_SSH_PASSPHRASE }}
          port:      42922
          script: |
            set -e
            cd /opt/clinicafisina_telegram_bot
            git fetch --all
            git reset --hard origin/main
            docker-compose pull
            docker-compose up -d
            # verify it's running
            if [ -z "$(docker ps -q -f name=clinicafisina_telegram_bot -f status=running)" ]; then
              echo "❌ Bot container is not running"
              exit 1
            fi
            echo "✅ Deployment successful"
